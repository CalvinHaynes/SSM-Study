<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--相当于 UserMapper 接口的实现类，只不过是XML写法-->
<!-- mapper namespace属性=实现的接口-->
<mapper namespace="top.calvinhaynes.mapper.UserMapper">

    <!-- 相当于一个返回值为 Users 类型的方法 selectUser-->
    <select id="selectUser" resultType="top.calvinhaynes.pojo.Users">
        -- 要执行的SQL语句编写位置
        select *
        from users
    </select>

    <!--通过用户ID查询用户-->
    <select id="selectUserById" resultType="top.calvinhaynes.pojo.Users" parameterType="int">
        select *
        from users
        where id = #{id};
    </select>

    <!--通过用户名修改一个用户-->
    <update id="updateUserByName" parameterType="top.calvinhaynes.pojo.Users">
        update users
        set id       = #{id},
            password = #{pwd}
        where name = #{name};
    </update>

    <!--添加用户-->
    <insert id="addUser" parameterType="top.calvinhaynes.pojo.Users">
        insert into users (id, name, password)
        values (#{id}, #{name}, #{pwd});
    </insert>

    <!--通过用户ID删除一个用户-->
    <delete id="deleteUserById" parameterType="int">
        delete
        from users
        where id = #{id};
    </delete>

    <!--通过Map参数增加一个用户-->
    <insert id="addUserByMap" parameterType="map">
        insert into users (id, name, password, last_name)
        values (#{userId}, #{userName}, #{userPassword}, #{userLastName});
    </insert>

    <!--模糊查询-->
    <select id="selectUserLike" resultType="top.calvinhaynes.pojo.Users">
        <!--方式一：需要在调用处手动的去添加“%”通配符-->
        <!--select * from users where name like #{value}-->

        <!--方式二：CONCAT合并字符串的MySQL函数，无需在调用处再手动添加通配符了 -->
        select *
        from users
        where name like concat('%',#{value},'%');

    </select>
</mapper>